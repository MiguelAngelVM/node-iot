{"version":3,"sources":["agent-tests.js"],"names":["test","require","config","logging","MetricStub","belongsTo","AgentStub","db","beforeEach","hasMany","setupDataBase","proxyquire","t","truthy","Agent"],"mappings":"AAAA;;;;;AAEA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA,IAAIC,SAAS;AACTC,aAAS,YAAU,CAAE;AADZ,CAAb;AAGA,IAAIC,aAAa;AACbC,eAAW,YAAU,CAAE;AADV,CAAjB;AAGA,IAAIC,YAAY,IAAhB;AACA,IAAIC,KAAK,IAAT;;AAEAP,KAAKQ,UAAL,CAAgB,YAAS;AACrBF,gBAAY;AACRG,iBAAS,YAAU,CAAE;AADb,KAAZ;AAGA,UAAMC,gBAAgBC,WAAY,KAAZ,EAAmB;AACrC,0BAAkB,MAAML,SADa;AAErC,2BAAmB,MAAMF;AAFY,KAAnB,CAAtB;AAIAG,SAAK,MAAMG,cAAcR,MAAd,CAAX;AACH,CATD;AAUAF,KAAK,OAAL,EAAcY,KAAI;AAAA;;AACdA,MAAEC,MAAF,uBAAS,qCAAGC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAmB,4BAAnB;AACH,CAFD","file":"agent-tests.js","sourcesContent":["'use strict'\n\nconst test = require('ava')\nlet config = {\n    logging: function(){}\n}\nlet MetricStub = {\n    belongsTo: function(){}\n}\nlet AgentStub = null\nlet db = null\n\ntest.beforeEach(async()=>{\n    AgentStub = {\n        hasMany: function(){}\n    }\n    const setupDataBase = proxyquire ('../', {\n        './models/agent': () => AgentStub, \n        './models/metric': () => MetricStub\n    })\n    db = await setupDataBase(config)\n})\ntest('Agent', t =>{\n    t.truthy(db.Agent, 'Agent service should exist')\n})"]}